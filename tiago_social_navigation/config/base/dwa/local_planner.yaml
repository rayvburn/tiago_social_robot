base_local_planner: dwa_local_planner/DWAPlannerROS

# slightly reduced due to multiple violations of desired frequency in real experiments
controller_frequency:  4.0

DWAPlannerROS:
  # Robot Configuration Parameters
  # Check config README if `DWA planner fails to produce path`
  acc_lim_x: 1.0
  acc_lim_theta: !degrees 60.0
  acc_lim_y: 0.0

  max_vel_x: 0.5
  # in some areas, keeping this negative might result in a robot switching to a permanent backward motion
  min_vel_x: -0.1

  max_vel_y: 0.0
  min_vel_y: 0.0

  # The velocity when robot is moving in a straight line
  max_vel_trans: 0.5
  min_vel_trans: 0.1

  max_vel_theta: !degrees 60.0
  min_vel_theta: !degrees 23.0

  # Forward Simulation Parameters
  sim_time: 2.0
  sim_granularity: 0.025 #

  # Trajectory Scoring Parameters
  goal_distance_bias: 20.0
  path_distance_bias: 32.0
  occdist_scale: 0.02

  stop_time_buffer: 0.2
  oscillation_reset_dist: 0.05

  forward_point_distance: 0.325

  scaling_speed: 0.25
  max_scaling_factor: 0.2

  vx_samples: 20
  vy_samples: 0
  vtheta_samples: 40

  # NOTE: the planner class searches for `controller_frequency` param but it's best to load the `move_base`'s param;
  # based on the `controller_frequency`, it computes the `sim_period`

  # Goal Tolerance Parameters
  xy_goal_tolerance: 0.2
  yaw_goal_tolerance: !degrees 11.5
  latch_xy_goal_tolerance: false

  theta_stopped_vel: !degrees 6.0
  trans_stopped_vel: 0.1

  # Debugging
  meter_scoring: true #
  publish_traj_pc : true
  publish_cost_grid_pc: true