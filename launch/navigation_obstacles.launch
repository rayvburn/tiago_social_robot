<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <arg name="costmap_converter" default="false"/>

  <!-- name of the topic that merged scans will be published on -->
  <arg name="scan_laser_rgbd_topic"   default="/scan_combined"/>

  <!-- not sure if necessary - see `simple_office_with_people` and `tiago_scenarios_maps/configurations` directory -->
  <node name="cp_maps_to_home" pkg="pal_navigation_sm" type="cp_maps_to_home.sh" args="tiago_maps" />

  <node name="rqt_robot_steering"    pkg="rqt_robot_steering"    type="rqt_robot_steering" />

  <include file="$(find tiago_scenarios)/launch/navigation.launch">
    <arg name="world"    value="small_office"/> <!-- simple_office_with_people 
    <arg name="map"      value="$(find tiago_scenarios_maps)/configurations/pal_simple_office_with_people"/> -->
    <arg name="lost"     value="false"/>
    <arg name="gzpose"   default="-x 0.0 -y 0.0 -z 0.0   -R 0.0 -P 0.0 -Y 0.0"/>
  </include>
  
  <!-- Tested, main drawback is that is creates multiple polygons from straight wall and this cannot be tuned by provided parameters -->
  <group if="$(eval arg('costmap_converter') == true)">
    <node pkg="costmap_converter" type="standalone_converter" name="costmap_standalone_converter" ns="costmap_converter" >
      <!-- possibilities:
      - "costmap_converter::CostmapToPolygonsDBSMCCH" (this is default)
      - "costmap_converter::CostmapToLinesDBSRANSAC"
      - "costmap_converter::CostmapToLinesDBSMCCH"
      - "costmap_converter::CostmapToPolygonsDBSConcaveHull"
      -->
      <param name="converter_plugin"      type="string"   value="costmap_converter::CostmapToLinesDBSMCCH" />
      <param name="costmap_topic"         type="string"   value="/move_base/local_costmap/costmap" />
      <param name="costmap_update_topic"  type="string"   value="/move_base/local_costmap/costmap_updates" />
      <param name="obstacles_topic"       type="string"   value="costmap_obstacles" />
      <param name="polygon_marker_topic"  type="string"   value="costmap_polygon_markers" />
      <param name="occupied_min_value"    type="int"      value="100" />
      <param name="odom_topic"            type="string"   value="/mobile_base_controller/odom" />
    </node>
  </group>

  <!-- syntax: http://wiki.ros.org/tf#static_transform_publisher -->
  <arg name="tf_map_world_defined" default="false"/>
  <!-- tf version - manual update rate selection
  <node pkg="tf" type="static_transform_publisher" name="tf_world_broadcaster" args="0 0 0 0 0 0 world map 50" unless="$(arg tf_map_world_defined)" /> -->
  <!-- tf2_ros version - tf update rate of approx. 1 kHz -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf_world_broadcaster" args="0 0 0 0 0 0 world map" unless="$(arg tf_map_world_defined)" />

  <arg name="tf_odom_map_defined" default="false"/>
  <node pkg="tf2_ros" type="static_transform_publisher" name="tf_map_broadcaster" args="0 0 0 0 0 0 map odom" unless="$(arg tf_odom_map_defined)" />

  <!-- `obstacle detector`'s merger performs awful, therefore - not used -->
  <include file="$(find tiago_scenarios)/launch/obstacle_detector.launch">
    <arg name="frame_id"              default="map"/>
    <arg name="target_frame_id"       default="base_footprint"/>
    <arg name="extractor_scan_topic"  default="$(arg scan_laser_rgbd_topic)"/>
  </include>

  <node pkg="laser_plane_merger" name="laser_plane_merger_node" type="laser_plane_merger_node" output="screen">
    <remap from="/scan1" to="/scan"/>
    <remap from="/scan2" to="/rgbd_scan"/>
    <remap from="/scan_merged" to="$(arg scan_laser_rgbd_topic)"/>
  </node>
  
  <include file="$(find people_extraction)/launch/people_extraction.launch"></include>

</launch>
